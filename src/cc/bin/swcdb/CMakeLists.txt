#
# SWC-DBÂ© Copyright since 2019 Alex Kashirin <kashirin.alex@gmail.com>
# License details at <https://github.com/kashirin-alex/swc-db/#license>


get_property(SWC_VERSION_SRC GLOBAL PROPERTY SWC_VERSION_SRC)

get_property(SWC_LIB_CORE_SHARED GLOBAL PROPERTY SWC_LIB_CORE_SHARED)
get_property(SWC_LIB_CORE_STATIC GLOBAL PROPERTY SWC_LIB_CORE_STATIC)

get_property(SWC_LIB_FS_SHARED GLOBAL PROPERTY SWC_LIB_FS_SHARED)
get_property(SWC_LIB_FS_STATIC GLOBAL PROPERTY SWC_LIB_FS_STATIC)



set(SHARED
  ${SWC_LIB_CORE_SHARED}
  ${SWC_LIB_CORE_LIBRARIES_SHARED}
  ${SWC_LIB_CORE_CONFIG_LIBRARIES_SHARED}
  ${SWC_LIB_CORE_COMM_LIBRARIES_SHARED}
)

set(STATIC
  ${SWC_LIB_CORE_STATIC}
  ${SWC_LIB_CORE_LIBRARIES_STATIC}
  ${SWC_LIB_CORE_CONFIG_LIBRARIES_STATIC}
  ${SWC_LIB_CORE_COMM_LIBRARIES_STATIC}
)

set(FLAGS )
set(TARGETS )
set(TARGETS_WITH_FS )

set(SHARED_TARGETS
  ${SWC_LIB_CORE_TARGET}
  ${SWC_LIB_CORE_CONFIG_TARGET}
  ${SWC_LIB_CORE_COMM_TARGET}
  ${SWC_LIB_TARGET}
)

set(SHARED_TARGETS_WITH_FS
  ${SHARED_TARGETS}
  ${SWC_LIB_FS_TARGET}
  ${BUILTIN_FS_TARGETS}
)


if(SWC_IMPL_SOURCE)
  set(FLAGS ${SWC_DEFAULT_PATH_FLAGS} "-DSWC_IMPL_SOURCE")
else()
  set(TARGETS ${SHARED_TARGETS})
  set(TARGETS_WITH_FS ${SHARED_TARGETS_WITH_FS})
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${BUILTIN_FS_FLAGS}")


if(SWC_ENABLE_SANITIZER)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DSWC_ENABLE_SANITIZER")
endif()


#add_subdirectory(manager)
#add_subdirectory(ranger)
#add_subdirectory(broker)
#add_subdirectory(thriftbroker)



# swcdbRanger
if(NOT SWC_BUILD_PKG OR SWC_BUILD_PKG STREQUAL "ranger")

set(RANGER_FLAGS ${FLAGS})
if(SWC_RANGER_WITH_RANGEDATA)
  set(RANGER_FLAGS ${RANGER_FLAGS} "-DSWC_RANGER_WITH_RANGEDATA")
endif()

ADD_EXEC_TARGET(
  NAME    swcdbRanger
  SRCS    ranger/main.cc
          ${SWC_VERSION_SRC}
  TARGETS ${TARGETS_WITH_FS}

  SHARED  ${SHARED}
          ${SWC_LIB_LIBRARIES_SHARED}
          ${SWC_LIB_FS_LIBRARIES_SHARED}
  STATIC  ${STATIC}
          ${SWC_LIB_LIBRARIES_STATIC}
          ${SWC_LIB_FS_LIBRARIES_STATIC}
  FLAGS   ${RANGER_FLAGS}
)
endif()



# swcdbManager
if(NOT SWC_BUILD_PKG OR SWC_BUILD_PKG STREQUAL "manager")

set(MANAGER_FLAGS ${FLAGS})
if(SWC_RANGER_WITH_RANGEDATA)
  set(MANAGER_FLAGS ${MANAGER_FLAGS} "-DSWC_RANGER_WITH_RANGEDATA")
endif()

ADD_EXEC_TARGET(
  NAME    swcdbManager
  SRCS    manager/main.cc
          ${SWC_VERSION_SRC}
  TARGETS ${TARGETS_WITH_FS}

  SHARED  ${SHARED}
          ${SWC_LIB_LIBRARIES_SHARED}
          ${SWC_LIB_FS_LIBRARIES_SHARED}
  STATIC  ${STATIC}
          ${SWC_LIB_LIBRARIES_STATIC}
          ${SWC_LIB_FS_LIBRARIES_STATIC}
  FLAGS   ${MANAGER_FLAGS}
)
endif()



# swcdbBroker
if(NOT SWC_BUILD_PKG OR SWC_BUILD_PKG STREQUAL "broker")
ADD_EXEC_TARGET(
  NAME    swcdbBroker
  SRCS    broker/main.cc
          ${SWC_VERSION_SRC}
  TARGETS ${TARGETS}

  SHARED  ${SHARED}
          ${SWC_LIB_LIBRARIES_SHARED}
  STATIC  ${STATIC}
          ${SWC_LIB_LIBRARIES_STATIC}
  FLAGS   ${FLAGS}
)
endif()



# swcdbThriftBroker
if((NOT SWC_BUILD_PKG AND THRIFT_CPP_GEN_PATH) OR
    SWC_BUILD_PKG STREQUAL "thriftbroker")

if(SWC_IMPL_SOURCE)
  set(_targets )
else()
  set(_targets ${SWC_LIB_THRIFT_TARGET})
endif()

ADD_EXEC_TARGET(
  NAME    swcdbThriftBroker
  SRCS    thriftbroker/main.cc
          ${SWC_VERSION_SRC}
  TARGETS ${TARGETS_WITH_FS}
          ${_targets}

  SHARED  ${SHARED}
          ${SWC_LIB_LIBRARIES_SHARED}
          ${SWC_LIB_FS_LIBRARIES_SHARED}
          ${SWC_LIB_THRIFT_LIBRARIES_SHARED}
          ${THRIFT_CPP_LIBRARIES_SHARED}
  STATIC  ${STATIC}
          ${SWC_LIB_LIBRARIES_STATIC}
          ${SWC_LIB_FS_LIBRARIES_STATIC}
          ${SWC_LIB_THRIFT_LIBRARIES_STATIC}
          ${THRIFT_CPP_LIBRARIES_STATIC}
  FLAGS   ${FLAGS} "-Wno-error=effc++"
)
endif()



# swcdbFsBroker
if(NOT SWC_BUILD_PKG OR SWC_BUILD_PKG STREQUAL "fsbroker")
ADD_EXEC_TARGET(
  NAME    swcdbFsBroker
  SRCS    fsbroker/main.cc
          ${SWC_VERSION_SRC}
  TARGETS ${SWC_LIB_CORE_TARGET}
          ${SWC_LIB_CORE_CONFIG_TARGET}
          ${SWC_LIB_CORE_COMM_TARGET}
          ${SWC_LIB_FS_TARGET}
          ${BUILTIN_FS_TARGETS}
          ${SWC_LIB_TARGET} # with libswcdb

  SHARED  ${SHARED}
          ${SWC_LIB_FS_LIBRARIES_SHARED}
          ${SWC_LIB_LIBRARIES_SHARED} # with libswcdb
  STATIC  ${STATIC}
          ${SWC_LIB_FS_LIBRARIES_STATIC}
          ${SWC_LIB_LIBRARIES_STATIC} # with libswcdb
  FLAGS   "-DFS_BROKER_APP"

  ONLY_DYN TRUE
)
endif()



if(NOT SWC_BUILD_PKG OR SWC_BUILD_PKG STREQUAL "utils")

# swcdb
ADD_EXEC_TARGET(
  NAME    swcdb
  SRCS    utils/main.cc
          ${SWC_VERSION_SRC}
  TARGETS ${SHARED_TARGETS_WITH_FS}

  SHARED  ${SHARED}
          ${SWC_LIB_LIBRARIES_SHARED}
          ${SWC_LIB_FS_LIBRARIES_SHARED}
  STATIC  ${STATIC}
          ${SWC_LIB_LIBRARIES_STATIC}
          ${SWC_LIB_FS_LIBRARIES_STATIC}

  ONLY_DYN TRUE
)



# swcdb_load_generator
ADD_EXEC_TARGET(
  NAME    swcdb_load_generator
  SRCS    utils/load_generator.cc
          ${SWC_VERSION_SRC}
  TARGETS ${TARGETS}

  SHARED  ${SHARED}
          ${SWC_LIB_LIBRARIES_SHARED}
  STATIC  ${STATIC}
          ${SWC_LIB_LIBRARIES_STATIC}
  FLAGS   ${FLAGS}
)

endif()
