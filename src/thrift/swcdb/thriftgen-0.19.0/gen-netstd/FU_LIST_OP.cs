/**
 * <auto-generated>
 * Autogenerated by Thrift Compiler (0.19.0)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 * </auto-generated>
 */

#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE0017  // object init can be simplified
#pragma warning disable IDE0028  // collection init can be simplified
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable CA1822   // empty DeepCopy() methods still non-static
#pragma warning disable IDE0083  // pattern matching "that is not SomeType" requires net5.0 but we still support earlier versions

/// <summary>
/// LIST Operations for Serial Field Update of array/list/bytes with LIST-op in the inner SERIAL fields
/// </summary>
public enum FU_LIST_OP
{
  /// <summary>
  /// Supported by field-types: BYTES, LIST_BYTES, LIST_INT64. Replaces with the update value
  /// </summary>
  REPLACE = 0,
  /// <summary>
  /// Supported by field-types: BYTES, LIST_BYTES, LIST_INT64. Appends the update value to a field value
  /// </summary>
  APPEND = 1,
  /// <summary>
  /// Supported by field-types: BYTES, LIST_BYTES, LIST_INT64. Prepends the update value to a field value
  /// </summary>
  PREPEND = 2,
  /// <summary>
  /// Supported by field-types: BYTES, LIST_BYTES, LIST_INT64. Insert the update value at position in a field value (appends if pos above value)
  /// </summary>
  INSERT = 3,
  /// <summary>
  /// Supported by field-types: BYTES, LIST_BYTES, LIST_INT64. Overwrites a field value at position with new value (appends if pos above value)
  /// </summary>
  OVERWRITE = 4,
  /// <summary>
  /// Supported by field-types: BYTES, LIST_BYTES, LIST_INT64. Erases the position in a field value
  /// </summary>
  ERASE = 5,
  /// <summary>
  /// Supported by field-types: LIST_BYTES, LIST_INT64. The field value items have CTRL_VALUE_SET/DEL OP
  /// </summary>
  BY_UNIQUE = 6,
  /// <summary>
  /// Supported by field-types: LIST_BYTES, LIST_INT64. The field value items have CTRL_VALUE_SET/DEL OP and Comparator
  /// </summary>
  BY_COND = 7,
  /// <summary>
  /// Supported by field-types: LIST_BYTES, LIST_INT64. The field value is with Postion and OP in items
  /// </summary>
  BY_INDEX = 8,
}
