/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.swcdb.thrift.gen;


/**
 * MATH Operations for Serial Field Update of types INT64 and DOUBLE
 */
public enum FU_MATH_OP implements org.apache.thrift.TEnum {
  /**
   * set field value to the new value
   */
  EQUAL(0),
  /**
   * plus new value to field's value (negative number allowed)
   */
  PLUS(1),
  /**
   * multiply current value by update value
   */
  MULTIPLY(2),
  /**
   * divide current value by the new value (ignored at zero)
   */
  DIVIDE(3);

  private final int value;

  private FU_MATH_OP(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  @Override
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static FU_MATH_OP findByValue(int value) { 
    switch (value) {
      case 0:
        return EQUAL;
      case 1:
        return PLUS;
      case 2:
        return MULTIPLY;
      case 3:
        return DIVIDE;
      default:
        return null;
    }
  }
}
